FROM osrf/ros:humble-desktop

ENV DEBIAN_FRONTEND=noninteractive

# install dependencies
RUN apt-get update \
    && apt-get install -y \
        python3 \
        python-is-python3 \
        pip \
    && pip install \
        imutils \
        opencv-python

ARG USE_NVIDIA_GRAPHICS_CARD false
ENV USE_NVIDIA_GRAPHICS_CARD ${USE_NVIDIA_GRAPHICS_CARD}
RUN if [ "$USE_NVIDIA_GRAPHICS_CARD" = true ]; then \
      apt-get -y install \
      gstreamer1.0-tools \
      gstreamer1.0-libav \
      libgstreamer1.0-dev \
      libgstreamer-plugins-base1.0-dev \
      libgstreamer-plugins-good1.0-dev \
      gstreamer1.0-plugins-good \
      gstreamer1.0-plugins-base; \
fi

RUN apt-get install -y gnome-terminal

# set nvidia varables
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# create workspace
RUN mkdir -p /ros2_ws/src
#WORKDIR /ros2_ws

#RUN git clone https://github.com/husarion/rosbot_hardware_interfaces.git; cd rosbot_hardware_interfaces; git checkout 70eba85bbd8b0a22db778ad723461fba24360464; cd /ros2_ws

#RUN git clone https://github.com/husarion/rosbot_controllers.git; cd rosbot_controllers; git checkout 16fe1306206d540f7955e31ecb0e09dba6a0831d; cd /ros2_ws

#RUN git clone https://github.com/gazebosim/gz_ros2_control; cd gz_ros2_control; git checkout 29a36e0dadf4c85a5a84560235f164dfea0fcd1e; cd /ros2_ws

#RUN git clone https://github.com/husarion/gazebo_worlds.git; cd gazebo_worlds; git checkout f8ab68771bf3154c9f713b2230f64afbc4fbbfc5; cd /ros2_ws

ADD ./docker/start-demo.sh /start-demo.sh
RUN chmod +x /start-demo.sh
